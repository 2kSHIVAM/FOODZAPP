{"id":"../../node_modules/axios/lib/helpers/spread.js","dependencies":[{"name":"C:\\Users\\DELL\\Desktop\\nonBrokerShop\\all-files\\package.json","includedInParent":true,"mtime":1666028277019},{"name":"C:\\Users\\DELL\\Desktop\\nonBrokerShop\\all-files\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1666019440668}],"generated":{"js":"'use strict';\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = spread;\n\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":3,"column":0}},{"generated":{"line":29,"column":0},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":24,"column":15}},{"name":"spread","generated":{"line":29,"column":9},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":24,"column":24}},{"generated":{"line":29,"column":15},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":24,"column":15}},{"name":"callback","generated":{"line":29,"column":16},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":24,"column":31}},{"generated":{"line":29,"column":24},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":24,"column":15}},{"generated":{"line":29,"column":26},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":24,"column":41}},{"generated":{"line":30,"column":0},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":2}},{"generated":{"line":30,"column":9},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":9}},{"name":"wrap","generated":{"line":30,"column":18},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":18}},{"generated":{"line":30,"column":22},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":9}},{"name":"arr","generated":{"line":30,"column":23},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":23}},{"generated":{"line":30,"column":26},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":9}},{"generated":{"line":30,"column":28},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":28}},{"generated":{"line":31,"column":0},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":4}},{"name":"callback","generated":{"line":31,"column":11},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":11}},{"generated":{"line":31,"column":19},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":19}},{"name":"apply","generated":{"line":31,"column":20},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":20}},{"generated":{"line":31,"column":25},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":11}},{"generated":{"line":31,"column":26},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":26}},{"generated":{"line":31,"column":30},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":11}},{"name":"arr","generated":{"line":31,"column":32},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":32}},{"generated":{"line":31,"column":35},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":11}},{"generated":{"line":31,"column":36},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":26,"column":4}},{"generated":{"line":32,"column":0},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":27,"column":3}},{"generated":{"line":32,"column":3},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":25,"column":2}},{"generated":{"line":33,"column":0},"source":"../../node_modules/axios/lib/helpers/spread.js","original":{"line":28,"column":1}}],"sources":{"../../node_modules/axios/lib/helpers/spread.js":"'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"21b41f13581aadf66016c675cea759d0","cacheData":{"env":{}}}